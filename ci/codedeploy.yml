---
Description: Create Phoenix UI CodeDeploy Infrastructures

Parameters:
  S3BucketName:
    Type: String
    Description: Enter the S3 Bucket name CodeDeploy will get the build artifacts from
  ELBName:
    Type: String
    Description: Name of ELB

Resources:
  CodeDeployIAMServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeDeployIAMServiceRole-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com #todo limit to certain AZ?
            Action:
              - 'sts:AssumeRole'
      "ManagedPolicyArns":
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  CodeDeployEC2Role: #this role will be used by EC2 instances where application will be deployed
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeDeployEC2Role-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com #todo limit to certain AZ?
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-CodeDeplyS3BucketAccess'
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                Resource:
                   - !Sub 'arn:aws:s3:::${S3BucketName}/*'
  CodeDeployEC2RoleProfile:
    Type: AWS::IAM::InstanceProfile

    Properties:
      InstanceProfileName: !Sub '${AWS::StackName}-CodeDeployEC2InstanceProfile'
      Path: /
      Roles:
        -
          Ref: CodeDeployEC2Role

  CodeDeployProject:
    Type: AWS::CodeDeploy::Application
    DependsOn: CodeDeployEC2Role
    Properties:
      ApplicationName:
        Fn::Sub: CodeDeploy-${AWS::StackName}
      ComputePlatform: Server

  StagingDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: CodeDeployProject
    Properties:
      ApplicationName: !Ref CodeDeployProject
      ServiceRoleArn: !GetAtt CodeDeployIAMServiceRole.Arn
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: IN_PLACE
      Ec2TagFilters:
        - Key: App_Env
          Type: KEY_AND_VALUE
          Value: WebUI_Staging
      LoadBalancerInfo:
        ElbInfoList:
          - Name:
              Ref: ELBName
#      Deployment:
#        Description: Test Deployment
#        Revision:
#          RevisionType: S3
#          S3Location:
#            Bucket:
#              Ref: S3BucketName
#            BundleType: zip
#            Key: Build-S3Test.zip
