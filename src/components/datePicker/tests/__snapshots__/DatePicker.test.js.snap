// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: DatePicker handleFormDates should use a date field format if provided 1`] = `
<TextField
  connectLeft={
    <Select
      disabled={false}
      onChange={[MockFunction]}
      options={
        Array [
          1,
          2,
          3,
        ]
      }
      value="day"
    />
  }
  disabled={false}
  onBlur={[MockFunction]}
  onClick={[MockFunction]}
  readOnly={true}
  resize="both"
  type="text"
  value="YYYY-MM h – YYYY-MM h"
/>
`;

exports[`Component: DatePicker should not render range select if showPresets is false 1`] = `
<TextField
  connectLeft={null}
  disabled={false}
  onBlur={[MockFunction]}
  onClick={[MockFunction]}
  readOnly={true}
  resize="both"
  type="text"
  value="MMM Do YYYY h:mma – MMM Do YYYY h:mma"
/>
`;

exports[`Component: DatePicker should render ok by default 1`] = `
<Popover
  bottom={true}
  className="Popover"
  onClose={[Function]}
  open={false}
  right={true}
  trigger={
    <TextField
      connectLeft={
        <Select
          disabled={false}
          onChange={[Function]}
          options={
            Array [
              1,
              2,
              3,
            ]
          }
          value="day"
        />
      }
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      readOnly={true}
      resize="both"
      type="text"
      value="MMM Do YYYY h:mma – MMM Do YYYY h:mma"
    />
  }
  wrapper="div"
>
  <DateSelector
    disabledDays={
      Object {
        "after": 2017-01-15T12:00:00.000Z,
      }
    }
    enableOutsideDays={false}
    fixedWeeks={true}
    initialMonth={2017-01-15T12:00:00.000Z}
    numberOfMonths={2}
    onDayClick={[Function]}
    onDayFocus={[Function]}
    onDayKeyDown={[Function]}
    onDayMouseEnter={[Function]}
    onKeyDown={[Function]}
    selectedDays={
      Object {
        "from": 2017-01-15T11:00:00.000Z,
        "to": 2017-01-15T12:00:00.000Z,
      }
    }
    toMonth={2017-01-15T12:00:00.000Z}
  />
  <ManualEntryForm
    from={2017-01-15T11:00:00.000Z}
    onEnter={[Function]}
    preventFuture={true}
    roundToPrecision={true}
    selectDates={[Function]}
    to={2017-01-15T12:00:00.000Z}
  />
  <Button
    className="Apply"
    onClick={[Function]}
    primary={true}
    size="default"
  >
    Apply
  </Button>
  <Button
    onClick={[Function]}
    size="default"
  >
    Cancel
  </Button>
  <WindowEvent
    event="keydown"
    handler={[Function]}
  />
</Popover>
`;
