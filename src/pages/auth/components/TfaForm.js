import React, { Component } from 'react';
import { connect } from 'react-redux';
import { Field, reduxForm } from 'redux-form';
import { required } from 'src/helpers/validation';
import { TextFieldWrapper } from 'src/components';

import { Button, UnstyledLink } from '@sparkpost/matchbox';
import { LINKS } from 'src/constants';

export class TfaForm extends Component {

  render() {
    const { tfaPending, pristine, handleSubmit } = this.props;

    return (
      <div>
        <div>
          <p className="join-p">Enter the code generated by your two-factor auth application, or one of your <UnstyledLink to={LINKS.TFA_BACKUP_CODES} external>backup codes</UnstyledLink>.</p>
        </div>
        <form onSubmit={handleSubmit}>
          <Field
            autoFocus
            name='code'
            id='code'
            label='Code'
            placeholder="123456"
            component={TextFieldWrapper}
            validate={required}
          />

          <Button primary submit disabled={tfaPending || pristine}>
            { tfaPending ? 'Logging In' : 'Log In' }
          </Button>
        </form>
      </div>
    );
  }
}

function mapStateToProps({ tfa }) {
  return {
    tfaPending: tfa.tfaPending,
    initialValues: {
      code: tfa.code
    }
  };
}

const formOptions = {
  form: 'tfaForm'
};

export default connect(mapStateToProps)(reduxForm(formOptions)(TfaForm));

