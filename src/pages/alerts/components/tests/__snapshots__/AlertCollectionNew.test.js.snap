// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TestCollection Component should render 1`] = `
<TableCollection
  columns={
    Array [
      Object {
        "label": "Alert Name",
        "sortKey": "name",
        "width": "40%",
      },
      Object {
        "label": "Metric",
        "sortKey": "metric",
      },
      Object {
        "label": "Last Triggered",
        "sortKey": "last_triggered_timestamp",
      },
      Object {
        "label": "Active",
        "sortKey": "muted",
      },
      null,
    ]
  }
  defaultSortColumn="last_triggered_timestamp"
  defaultSortDirection="desc"
  filterBox={
    Object {
      "exampleModifiers": Array [
        "name",
      ],
      "itemToStringKeys": Array [
        "name",
      ],
      "show": true,
      "wrapper": [Function],
    }
  }
  getRowData={[Function]}
  pagination={true}
  rows={
    Array [
      Object {
        "id": "id-1",
        "last_triggered": null,
        "last_triggered_formatted": null,
        "last_triggered_timestamp": 0,
        "metric": "monthly_sending_limit",
        "muted": true,
        "name": "my alert 1",
      },
      Object {
        "id": "id-2",
        "last_triggered": "2019-06-05T14:48:00.000Z",
        "last_triggered_formatted": "Jun 5 2019, 10:48am",
        "last_triggered_timestamp": 1559746080000,
        "metric": "monthly_sending_limit",
        "muted": false,
        "name": "my alert 2",
      },
      Object {
        "id": "id-3",
        "last_triggered": "2019-06-015T14:48:00.000Z",
        "last_triggered_formatted": "Jun 15 2019, 10:48am",
        "last_triggered_timestamp": 1560610080000,
        "metric": "health_score",
        "muted": true,
        "name": "my alert 3",
      },
    ]
  }
  wrapperComponent={[Function]}
>
  <Component />
</TableCollection>
`;

exports[`TestCollection Component should render row data properly 1`] = `
Array [
  <PageLink
    className="AlertNameLink"
    to="/alerts-new/details/id-1"
  >
    my alert 1
  </PageLink>,
  <Tag>
    Monthly Sending Limit
  </Tag>,
  <DisplayDate
    formattedDate="Never Triggered"
    timestamp={0}
  />,
  <Connect(AlertToggle)
    id="id-1"
    muted={true}
  />,
  <Tooltip
    bottom={true}
    content="Delete"
    dark={true}
    forcePosition={false}
    horizontalOffset="-8px"
    preferredDirection={
      Object {
        "bottom": true,
        "left": false,
        "right": true,
        "top": false,
      }
    }
    right={true}
    width="auto"
  >
    <Button
      flat={true}
      onClick={[Function]}
      size="default"
    >
      <Delete
        className="Icon"
      />
    </Button>
  </Tooltip>,
]
`;

exports[`TestCollection Component should render row data properly 2`] = `
Array [
  <PageLink
    className="AlertNameLink"
    to="/alerts-new/details/id-2"
  >
    my alert 2
  </PageLink>,
  <Tag>
    Monthly Sending Limit
  </Tag>,
  <DisplayDate
    formattedDate="Jun 5 2019, 10:48am"
    timestamp={1559746080000}
  />,
  <Connect(AlertToggle)
    id="id-2"
    muted={false}
  />,
  <Tooltip
    bottom={true}
    content="Delete"
    dark={true}
    forcePosition={false}
    horizontalOffset="-8px"
    preferredDirection={
      Object {
        "bottom": true,
        "left": false,
        "right": true,
        "top": false,
      }
    }
    right={true}
    width="auto"
  >
    <Button
      flat={true}
      onClick={[Function]}
      size="default"
    >
      <Delete
        className="Icon"
      />
    </Button>
  </Tooltip>,
]
`;

exports[`TestCollection Component should render row data properly 3`] = `
Array [
  <PageLink
    className="AlertNameLink"
    to="/alerts-new/details/id-3"
  >
    my alert 3
  </PageLink>,
  <Tag>
    Health Score
  </Tag>,
  <DisplayDate
    formattedDate="Jun 15 2019, 10:48am"
    timestamp={1560610080000}
  />,
  <Connect(AlertToggle)
    id="id-3"
    muted={true}
  />,
  <Tooltip
    bottom={true}
    content="Delete"
    dark={true}
    forcePosition={false}
    horizontalOffset="-8px"
    preferredDirection={
      Object {
        "bottom": true,
        "left": false,
        "right": true,
        "top": false,
      }
    }
    right={true}
    width="auto"
  >
    <Button
      flat={true}
      onClick={[Function]}
      size="default"
    >
      <Delete
        className="Icon"
      />
    </Button>
  </Tooltip>,
]
`;
