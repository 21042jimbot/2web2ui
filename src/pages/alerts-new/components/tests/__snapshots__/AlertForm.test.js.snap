// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Alert Form Component criteria props should add prefix and suffix to target when alert_metric is NOT set to signals_health_threshold 1`] = `
Object {
  "component": [Function],
  "connectLeft": false,
  "disabled": false,
  "name": "threshold.error.target",
  "normalize": [Function],
  "prefix": "Above",
  "style": Object {
    "textAlign": "right",
  },
  "suffix": "%",
  "validate": Array [
    [Function],
    [Function],
    [Function],
  ],
}
`;

exports[`Alert Form Component criteria props should add prefix and suffix to target when alert_metric is NOT set to signals_health_threshold 2`] = `
Object {
  "component": [Function],
  "connectLeft": <Field
    component={[Function]}
    disabled={false}
    name="threshold.error.comparator"
    options={
      Array [
        Object {
          "label": "Below",
          "value": "lt",
        },
        Object {
          "label": "Above",
          "value": "gt",
        },
      ]
    }
    validate={[Function]}
  />,
  "disabled": false,
  "name": "threshold.error.target",
  "normalize": [Function],
  "prefix": "",
  "style": Object {
    "textAlign": "right",
  },
  "suffix": "",
  "validate": Array [
    [Function],
    [Function],
  ],
}
`;

exports[`Alert Form Component criteria props should add prefix and suffix to target when alert_metric is NOT set to signals_health_threshold 3`] = `
Object {
  "component": [Function],
  "connectLeft": false,
  "disabled": false,
  "name": "threshold.error.target",
  "normalize": [Function],
  "prefix": "Drops Below",
  "style": Object {
    "textAlign": "right",
  },
  "suffix": "%",
  "validate": Array [
    [Function],
    [Function],
    [Function],
  ],
}
`;

exports[`Alert Form Component enabled prop should only show enabled toggle on edit page 1`] = `
<Form
  onSubmit={[MockFunction]}
>
  <Panel>
    <Panel.Section>
      <Field
        component={[Function]}
        disabled={false}
        label="Name"
        name="name"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        disabled={false}
        helpText="This assignment is permanent."
        label="Alert Type"
        name="alert_metric"
        options={
          Array [
            Object {
              "label": "Monthly Sending Limit",
              "value": "monthly_sending_limit",
            },
            Object {
              "label": "Health Score",
              "value": "signals_health_threshold",
            },
            Object {
              "label": "Health Score - Day over Day",
              "value": "signals_health_dod",
            },
            Object {
              "label": "Health Score - Week over Week",
              "value": "signals_health_wow",
            },
          ]
        }
        validate={[Function]}
      />
      <Field
        component={[Function]}
        label="Account"
        name="assignTo"
        options={
          Array [
            Object {
              "label": "Master and all subaccounts",
              "value": "ALL",
            },
            Object {
              "label": "Master account only",
              "value": "master",
            },
            Object {
              "label": "Single Subaccount",
              "value": "subaccount",
            },
          ]
        }
      />
      <label>
        Facet
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="facet_name"
                  options={
                    Array [
                      Object {
                        "label": "None",
                        "value": "ALL",
                      },
                      Object {
                        "label": "Campaign ID",
                        "value": "campaign_id",
                      },
                      Object {
                        "label": "IP Pool",
                        "value": "ip_pool",
                      },
                      Object {
                        "label": "Mailbox Provider",
                        "value": "mb_provider",
                      },
                      Object {
                        "label": "Sending Domain",
                        "value": "sending_domain",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              helpText={null}
              items={null}
              name="facet_value"
              placeholder="mail.example.com"
              validate={[Function]}
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <label>
        Criteria
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="threshold.error.comparator"
                  options={
                    Array [
                      Object {
                        "label": "Below",
                        "value": "lt",
                      },
                      Object {
                        "label": "Above",
                        "value": "gt",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              name="threshold.error.target"
              normalize={[Function]}
              prefix=""
              style={
                Object {
                  "textAlign": "right",
                }
              }
              suffix=""
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Field
        component={[Function]}
        disabled={false}
        label="Notify"
        multiline={true}
        name="email_addresses"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <br />
      <Button
        disabled={true}
        primary={true}
        size="default"
        submit={true}
      >
        Create Alert
      </Button>
    </Panel.Section>
  </Panel>
</Form>
`;

exports[`Alert Form Component enabled prop should only show enabled toggle on edit page 2`] = `
<Form
  onSubmit={[MockFunction]}
>
  <Panel>
    <Panel.Section>
      <Field
        component={[Function]}
        disabled={false}
        label="Name"
        name="name"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        disabled={true}
        helpText="This assignment is permanent."
        label="Alert Type"
        name="alert_metric"
        options={
          Array [
            Object {
              "label": "Monthly Sending Limit",
              "value": "monthly_sending_limit",
            },
            Object {
              "label": "Health Score",
              "value": "signals_health_threshold",
            },
            Object {
              "label": "Health Score - Day over Day",
              "value": "signals_health_dod",
            },
            Object {
              "label": "Health Score - Week over Week",
              "value": "signals_health_wow",
            },
          ]
        }
        validate={[Function]}
      />
      <Field
        component={[Function]}
        label="Account"
        name="assignTo"
        options={
          Array [
            Object {
              "label": "Master and all subaccounts",
              "value": "ALL",
            },
            Object {
              "label": "Master account only",
              "value": "master",
            },
            Object {
              "label": "Single Subaccount",
              "value": "subaccount",
            },
          ]
        }
      />
      <label>
        Facet
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="facet_name"
                  options={
                    Array [
                      Object {
                        "label": "None",
                        "value": "ALL",
                      },
                      Object {
                        "label": "Campaign ID",
                        "value": "campaign_id",
                      },
                      Object {
                        "label": "IP Pool",
                        "value": "ip_pool",
                      },
                      Object {
                        "label": "Mailbox Provider",
                        "value": "mb_provider",
                      },
                      Object {
                        "label": "Sending Domain",
                        "value": "sending_domain",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              helpText={null}
              items={null}
              name="facet_value"
              placeholder="mail.example.com"
              validate={[Function]}
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <label>
        Criteria
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="threshold.error.comparator"
                  options={
                    Array [
                      Object {
                        "label": "Below",
                        "value": "lt",
                      },
                      Object {
                        "label": "Above",
                        "value": "gt",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              name="threshold.error.target"
              normalize={[Function]}
              prefix=""
              style={
                Object {
                  "textAlign": "right",
                }
              }
              suffix=""
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Field
        component={[Function]}
        disabled={false}
        label="Notify"
        multiline={true}
        name="email_addresses"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Grid>
        <Grid.Column
          md={1}
          xs={1}
        >
          <label>
            Enabled
          </label>
        </Grid.Column>
        <Grid.Column
          md={1}
          xs={1}
        >
          <div>
            <Field
              component={[Function]}
              disabled={false}
              name="enabled"
              type="checkbox"
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Button
        disabled={true}
        primary={true}
        size="default"
        submit={true}
      >
        Update Alert
      </Button>
    </Panel.Section>
  </Panel>
</Form>
`;

exports[`Alert Form Component facet props should clear facet_value and validation when facet_name is set to master and signals threshold 1`] = `
<Form
  onSubmit={[MockFunction]}
>
  <Panel>
    <Panel.Section>
      <Field
        component={[Function]}
        disabled={false}
        label="Name"
        name="name"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        disabled={true}
        helpText="This assignment is permanent."
        label="Alert Type"
        name="alert_metric"
        options={
          Array [
            Object {
              "label": "Monthly Sending Limit",
              "value": "monthly_sending_limit",
            },
            Object {
              "label": "Health Score",
              "value": "signals_health_threshold",
            },
            Object {
              "label": "Health Score - Day over Day",
              "value": "signals_health_dod",
            },
            Object {
              "label": "Health Score - Week over Week",
              "value": "signals_health_wow",
            },
          ]
        }
        validate={[Function]}
      />
      <Field
        component={[Function]}
        label="Account"
        name="assignTo"
        options={
          Array [
            Object {
              "label": "Master and all subaccounts",
              "value": "ALL",
            },
            Object {
              "label": "Master account only",
              "value": "master",
            },
            Object {
              "label": "Single Subaccount",
              "value": "subaccount",
            },
          ]
        }
      />
      <label>
        Facet
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="facet_name"
                  options={
                    Array [
                      Object {
                        "label": "None",
                        "value": "ALL",
                      },
                      Object {
                        "label": "Campaign ID",
                        "value": "campaign_id",
                      },
                      Object {
                        "label": "IP Pool",
                        "value": "ip_pool",
                      },
                      Object {
                        "label": "Mailbox Provider",
                        "value": "mb_provider",
                      },
                      Object {
                        "label": "Sending Domain",
                        "value": "sending_domain",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              helpText={null}
              items={null}
              name="facet_value"
              placeholder="mail.example.com"
              validate={[Function]}
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <label>
        Criteria
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="threshold.error.comparator"
                  options={
                    Array [
                      Object {
                        "label": "Below",
                        "value": "lt",
                      },
                      Object {
                        "label": "Above",
                        "value": "gt",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              name="threshold.error.target"
              normalize={[Function]}
              prefix=""
              style={
                Object {
                  "textAlign": "right",
                }
              }
              suffix=""
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Field
        component={[Function]}
        disabled={false}
        label="Notify"
        multiline={true}
        name="email_addresses"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Grid>
        <Grid.Column
          md={1}
          xs={1}
        >
          <label>
            Enabled
          </label>
        </Grid.Column>
        <Grid.Column
          md={1}
          xs={1}
        >
          <div>
            <Field
              component={[Function]}
              disabled={false}
              name="enabled"
              type="checkbox"
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Button
        disabled={true}
        primary={true}
        size="default"
        submit={true}
      >
        Update Alert
      </Button>
    </Panel.Section>
  </Panel>
</Form>
`;

exports[`Alert Form Component facet props should clear facet_value and validation when facet_name is set to master and signals threshold 2`] = `
<Form
  onSubmit={[MockFunction]}
>
  <Panel>
    <Panel.Section>
      <Field
        component={[Function]}
        disabled={false}
        label="Name"
        name="name"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        disabled={true}
        helpText="This assignment is permanent."
        label="Alert Type"
        name="alert_metric"
        options={
          Array [
            Object {
              "label": "Monthly Sending Limit",
              "value": "monthly_sending_limit",
            },
            Object {
              "label": "Health Score",
              "value": "signals_health_threshold",
            },
            Object {
              "label": "Health Score - Day over Day",
              "value": "signals_health_dod",
            },
            Object {
              "label": "Health Score - Week over Week",
              "value": "signals_health_wow",
            },
          ]
        }
        validate={[Function]}
      />
      <Field
        component={[Function]}
        label="Account"
        name="assignTo"
        options={
          Array [
            Object {
              "label": "Master and all subaccounts",
              "value": "ALL",
            },
            Object {
              "label": "Master account only",
              "value": "master",
            },
            Object {
              "label": "Single Subaccount",
              "value": "subaccount",
            },
          ]
        }
      />
      <label>
        Facet
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="facet_name"
                  options={
                    Array [
                      Object {
                        "label": "None",
                        "value": "ALL",
                      },
                      Object {
                        "label": "Campaign ID",
                        "value": "campaign_id",
                      },
                      Object {
                        "label": "IP Pool",
                        "value": "ip_pool",
                      },
                      Object {
                        "label": "Mailbox Provider",
                        "value": "mb_provider",
                      },
                      Object {
                        "label": "Sending Domain",
                        "value": "sending_domain",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              helpText={null}
              items={
                Array [
                  "someIpPool",
                  "someOtherIpPool",
                ]
              }
              name="facet_value"
              placeholder=""
              validate={[Function]}
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <label>
        Criteria
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={false}
              disabled={false}
              name="threshold.error.target"
              normalize={[Function]}
              prefix="Drops Below"
              style={
                Object {
                  "textAlign": "right",
                }
              }
              suffix="%"
              validate={
                Array [
                  [Function],
                  [Function],
                  [Function],
                ]
              }
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Field
        component={[Function]}
        disabled={false}
        label="Notify"
        multiline={true}
        name="email_addresses"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Grid>
        <Grid.Column
          md={1}
          xs={1}
        >
          <label>
            Enabled
          </label>
        </Grid.Column>
        <Grid.Column
          md={1}
          xs={1}
        >
          <div>
            <Field
              component={[Function]}
              disabled={false}
              name="enabled"
              type="checkbox"
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Button
        disabled={true}
        primary={true}
        size="default"
        submit={true}
      >
        Update Alert
      </Button>
    </Panel.Section>
  </Panel>
</Form>
`;

exports[`Alert Form Component facet props should show ip pool facets typeahead component with correct props when facet_name is set to ip_pool 1`] = `
Object {
  "component": [Function],
  "connectLeft": <Field
    component={[Function]}
    disabled={false}
    name="facet_name"
    options={
      Array [
        Object {
          "label": "None",
          "value": "ALL",
        },
        Object {
          "label": "Campaign ID",
          "value": "campaign_id",
        },
        Object {
          "label": "IP Pool",
          "value": "ip_pool",
        },
        Object {
          "label": "Mailbox Provider",
          "value": "mb_provider",
        },
        Object {
          "label": "Sending Domain",
          "value": "sending_domain",
        },
      ]
    }
    validate={[Function]}
  />,
  "disabled": false,
  "helpText": null,
  "items": Array [
    "someIpPool",
    "someOtherIpPool",
  ],
  "name": "facet_value",
  "placeholder": "",
  "validate": [Function],
}
`;

exports[`Alert Form Component facet props should show warning if no ip pools 1`] = `
Object {
  "component": [Function],
  "connectLeft": <Field
    component={[Function]}
    disabled={false}
    name="facet_name"
    options={
      Array [
        Object {
          "label": "None",
          "value": "ALL",
        },
        Object {
          "label": "Campaign ID",
          "value": "campaign_id",
        },
        Object {
          "label": "IP Pool",
          "value": "ip_pool",
        },
        Object {
          "label": "Mailbox Provider",
          "value": "mb_provider",
        },
        Object {
          "label": "Sending Domain",
          "value": "sending_domain",
        },
      ]
    }
    validate={[Function]}
  />,
  "disabled": false,
  "helpText": "You do not have any ip pools to use.",
  "items": Array [],
  "name": "facet_value",
  "placeholder": "",
  "validate": [Function],
}
`;

exports[`Alert Form Component should handle submit 1`] = `
<Form
  onSubmit={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": undefined,
    }
  }
>
  <Panel>
    <Panel.Section>
      <Field
        component={[Function]}
        disabled={false}
        label="Name"
        name="name"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        disabled={true}
        helpText="This assignment is permanent."
        label="Alert Type"
        name="alert_metric"
        options={
          Array [
            Object {
              "label": "Monthly Sending Limit",
              "value": "monthly_sending_limit",
            },
            Object {
              "label": "Health Score",
              "value": "signals_health_threshold",
            },
            Object {
              "label": "Health Score - Day over Day",
              "value": "signals_health_dod",
            },
            Object {
              "label": "Health Score - Week over Week",
              "value": "signals_health_wow",
            },
          ]
        }
        validate={[Function]}
      />
      <Field
        component={[Function]}
        label="Account"
        name="assignTo"
        options={
          Array [
            Object {
              "label": "Master and all subaccounts",
              "value": "ALL",
            },
            Object {
              "label": "Master account only",
              "value": "master",
            },
            Object {
              "label": "Single Subaccount",
              "value": "subaccount",
            },
          ]
        }
      />
      <label>
        Facet
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="facet_name"
                  options={
                    Array [
                      Object {
                        "label": "None",
                        "value": "ALL",
                      },
                      Object {
                        "label": "Campaign ID",
                        "value": "campaign_id",
                      },
                      Object {
                        "label": "IP Pool",
                        "value": "ip_pool",
                      },
                      Object {
                        "label": "Mailbox Provider",
                        "value": "mb_provider",
                      },
                      Object {
                        "label": "Sending Domain",
                        "value": "sending_domain",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              helpText={null}
              items={null}
              name="facet_value"
              placeholder="mail.example.com"
              validate={[Function]}
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <label>
        Criteria
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="threshold.error.comparator"
                  options={
                    Array [
                      Object {
                        "label": "Below",
                        "value": "lt",
                      },
                      Object {
                        "label": "Above",
                        "value": "gt",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              name="threshold.error.target"
              normalize={[Function]}
              prefix=""
              style={
                Object {
                  "textAlign": "right",
                }
              }
              suffix=""
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Field
        component={[Function]}
        disabled={false}
        label="Notify"
        multiline={true}
        name="email_addresses"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Grid>
        <Grid.Column
          md={1}
          xs={1}
        >
          <label>
            Enabled
          </label>
        </Grid.Column>
        <Grid.Column
          md={1}
          xs={1}
        >
          <div>
            <Field
              component={[Function]}
              disabled={false}
              name="enabled"
              type="checkbox"
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Button
        disabled={true}
        primary={true}
        size="default"
        submit={true}
      >
        Update Alert
      </Button>
    </Panel.Section>
  </Panel>
</Form>
`;

exports[`Alert Form Component should render the alert form component correctly 1`] = `
<Form
  onSubmit={[MockFunction]}
>
  <Panel>
    <Panel.Section>
      <Field
        component={[Function]}
        disabled={false}
        label="Name"
        name="name"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        disabled={true}
        helpText="This assignment is permanent."
        label="Alert Type"
        name="alert_metric"
        options={
          Array [
            Object {
              "label": "Monthly Sending Limit",
              "value": "monthly_sending_limit",
            },
            Object {
              "label": "Health Score",
              "value": "signals_health_threshold",
            },
            Object {
              "label": "Health Score - Day over Day",
              "value": "signals_health_dod",
            },
            Object {
              "label": "Health Score - Week over Week",
              "value": "signals_health_wow",
            },
          ]
        }
        validate={[Function]}
      />
      <Field
        component={[Function]}
        label="Account"
        name="assignTo"
        options={
          Array [
            Object {
              "label": "Master and all subaccounts",
              "value": "ALL",
            },
            Object {
              "label": "Master account only",
              "value": "master",
            },
            Object {
              "label": "Single Subaccount",
              "value": "subaccount",
            },
          ]
        }
      />
      <label>
        Facet
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="facet_name"
                  options={
                    Array [
                      Object {
                        "label": "None",
                        "value": "ALL",
                      },
                      Object {
                        "label": "Campaign ID",
                        "value": "campaign_id",
                      },
                      Object {
                        "label": "IP Pool",
                        "value": "ip_pool",
                      },
                      Object {
                        "label": "Mailbox Provider",
                        "value": "mb_provider",
                      },
                      Object {
                        "label": "Sending Domain",
                        "value": "sending_domain",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              helpText={null}
              items={null}
              name="facet_value"
              placeholder="mail.example.com"
              validate={[Function]}
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <label>
        Criteria
      </label>
      <Grid>
        <Grid.Column
          lg={5}
          md={7}
          sm={8}
        >
          <div>
            <Field
              component={[Function]}
              connectLeft={
                <Field
                  component={[Function]}
                  disabled={false}
                  name="threshold.error.comparator"
                  options={
                    Array [
                      Object {
                        "label": "Below",
                        "value": "lt",
                      },
                      Object {
                        "label": "Above",
                        "value": "gt",
                      },
                    ]
                  }
                  validate={[Function]}
                />
              }
              disabled={false}
              name="threshold.error.target"
              normalize={[Function]}
              prefix=""
              style={
                Object {
                  "textAlign": "right",
                }
              }
              suffix=""
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Field
        component={[Function]}
        disabled={false}
        label="Notify"
        multiline={true}
        name="email_addresses"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Grid>
        <Grid.Column
          md={1}
          xs={1}
        >
          <label>
            Enabled
          </label>
        </Grid.Column>
        <Grid.Column
          md={1}
          xs={1}
        >
          <div>
            <Field
              component={[Function]}
              disabled={false}
              name="enabled"
              type="checkbox"
            />
          </div>
        </Grid.Column>
      </Grid>
      <br />
      <Button
        disabled={true}
        primary={true}
        size="default"
        submit={true}
      >
        Update Alert
      </Button>
    </Panel.Section>
  </Panel>
</Form>
`;
