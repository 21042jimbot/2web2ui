// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(ReduxForm)>
    <ReduxForm
      dispatch={[Function]}
      initialValues={
        Object {
          "firstName": "Ned",
          "lastName": "Stark",
        }
      }
      theForm={
        Object {
          "initial": Object {
            "firstName": "Ned",
            "lastName": "Stark",
          },
          "registeredFields": Object {
            "firstName": Object {
              "count": 1,
              "name": "firstName",
              "type": "Field",
            },
            "lastName": Object {
              "count": 1,
              "name": "lastName",
              "type": "Field",
            },
          },
          "values": Object {
            "firstName": "Ned",
            "lastName": "Stark",
          },
        }
      }
    >
      <Connect(Form(NameForm))
        destroyOnUnmount={true}
        dispatch={[Function]}
        enableReinitialize={true}
        forceUnregisterOnUnmount={false}
        form="profileName"
        getFormState={[Function]}
        initialValues={
          Object {
            "firstName": "Ned",
            "lastName": "Stark",
          }
        }
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pure={true}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        theForm={
          Object {
            "initial": Object {
              "firstName": "Ned",
              "lastName": "Stark",
            },
            "registeredFields": Object {
              "firstName": Object {
                "count": 1,
                "name": "firstName",
                "type": "Field",
              },
              "lastName": Object {
                "count": 1,
                "name": "lastName",
                "type": "Field",
              },
            },
            "values": Object {
              "firstName": "Ned",
              "lastName": "Stark",
            },
          }
        }
        touchOnBlur={true}
        touchOnChange={false}
      >
        <Form(NameForm)
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          arrayInsert={[Function]}
          arrayMove={[Function]}
          arrayPop={[Function]}
          arrayPush={[Function]}
          arrayRemove={[Function]}
          arrayRemoveAll={[Function]}
          arrayShift={[Function]}
          arraySplice={[Function]}
          arraySwap={[Function]}
          arrayUnshift={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          destroyOnUnmount={true}
          dirty={false}
          dispatch={[Function]}
          enableReinitialize={true}
          focus={[Function]}
          forceUnregisterOnUnmount={false}
          form="profileName"
          getFormState={[Function]}
          initialValues={
            Object {
              "firstName": "Ned",
              "lastName": "Stark",
            }
          }
          initialize={[Function]}
          initialized={true}
          invalid={false}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pristine={true}
          pure={true}
          registerField={[Function]}
          registeredFields={
            Object {
              "firstName": Object {
                "count": 1,
                "name": "firstName",
                "type": "Field",
              },
              "lastName": Object {
                "count": 1,
                "name": "lastName",
                "type": "Field",
              },
            }
          }
          reset={[Function]}
          setSubmitFailed={[Function]}
          setSubmitSucceeded={[Function]}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          startAsyncValidation={[Function]}
          startSubmit={[Function]}
          stopAsyncValidation={[Function]}
          stopSubmit={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          syncErrors={Object {}}
          syncWarnings={Object {}}
          theForm={
            Object {
              "initial": Object {
                "firstName": "Ned",
                "lastName": "Stark",
              },
              "registeredFields": Object {
                "firstName": Object {
                  "count": 1,
                  "name": "firstName",
                  "type": "Field",
                },
                "lastName": Object {
                  "count": 1,
                  "name": "lastName",
                  "type": "Field",
                },
              },
              "values": Object {
                "firstName": "Ned",
                "lastName": "Stark",
              },
            }
          }
          touch={[Function]}
          touchOnBlur={true}
          touchOnChange={false}
          unregisterField={[Function]}
          untouch={[Function]}
          updateSyncErrors={[Function]}
          updateSyncWarnings={[Function]}
          valid={true}
          validExceptSubmit={true}
          values={
            Object {
              "firstName": "Ned",
              "lastName": "Stark",
            }
          }
        >
          <NameForm
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={false}
            dispatch={[Function]}
            form="profileName"
            handleSubmit={[Function]}
            initialValues={
              Object {
                "firstName": "Ned",
                "lastName": "Stark",
              }
            }
            initialize={[Function]}
            initialized={true}
            invalid={false}
            pristine={true}
            pure={true}
            reset={[Function]}
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            theForm={
              Object {
                "initial": Object {
                  "firstName": "Ned",
                  "lastName": "Stark",
                },
                "registeredFields": Object {
                  "firstName": Object {
                    "count": 1,
                    "name": "firstName",
                    "type": "Field",
                  },
                  "lastName": Object {
                    "count": 1,
                    "name": "lastName",
                    "type": "Field",
                  },
                },
                "values": Object {
                  "firstName": "Ned",
                  "lastName": "Stark",
                },
              }
            }
            touch={[Function]}
            untouch={[Function]}
            valid={true}
          >
            <form>
              <Field
                component={[Function]}
                id="firstName"
                label="First Name"
                name="firstName"
              >
                <Connect(ConnectedField)
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": true,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "profileName",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": Object {
                        "firstName": "Ned",
                        "lastName": "Stark",
                      },
                      "initialize": [Function],
                      "initialized": true,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "firstName": Object {
                          "count": 1,
                          "name": "firstName",
                          "type": "Field",
                        },
                        "lastName": Object {
                          "count": 1,
                          "name": "lastName",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "theForm": Object {
                        "initial": Object {
                          "firstName": "Ned",
                          "lastName": "Stark",
                        },
                        "registeredFields": Object {
                          "firstName": Object {
                            "count": 1,
                            "name": "firstName",
                            "type": "Field",
                          },
                          "lastName": Object {
                            "count": 1,
                            "name": "lastName",
                            "type": "Field",
                          },
                        },
                        "values": Object {
                          "firstName": "Ned",
                          "lastName": "Stark",
                        },
                      },
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "firstName": "Ned",
                        "lastName": "Stark",
                      },
                      "warning": undefined,
                    }
                  }
                  component={[Function]}
                  id="firstName"
                  label="First Name"
                  name="firstName"
                  normalize={[Function]}
                >
                  <ConnectedField
                    _reduxForm={
                      Object {
                        "anyTouched": false,
                        "array": Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        },
                        "arrayInsert": [Function],
                        "arrayMove": [Function],
                        "arrayPop": [Function],
                        "arrayPush": [Function],
                        "arrayRemove": [Function],
                        "arrayRemoveAll": [Function],
                        "arrayShift": [Function],
                        "arraySplice": [Function],
                        "arraySwap": [Function],
                        "arrayUnshift": [Function],
                        "asyncErrors": undefined,
                        "asyncValidate": [Function],
                        "asyncValidating": false,
                        "autofill": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearAsyncError": [Function],
                        "clearSubmit": [Function],
                        "clearSubmitErrors": [Function],
                        "destroy": [Function],
                        "destroyOnUnmount": true,
                        "dirty": false,
                        "dispatch": [Function],
                        "enableReinitialize": true,
                        "error": undefined,
                        "focus": [Function],
                        "forceUnregisterOnUnmount": false,
                        "form": "profileName",
                        "getFormState": [Function],
                        "getValues": [Function],
                        "initialValues": Object {
                          "firstName": "Ned",
                          "lastName": "Stark",
                        },
                        "initialize": [Function],
                        "initialized": true,
                        "invalid": false,
                        "keepDirtyOnReinitialize": false,
                        "persistentSubmitErrors": false,
                        "pristine": true,
                        "pure": true,
                        "register": [Function],
                        "registerField": [Function],
                        "registerInnerOnSubmit": [Function],
                        "registeredFields": Object {
                          "firstName": Object {
                            "count": 1,
                            "name": "firstName",
                            "type": "Field",
                          },
                          "lastName": Object {
                            "count": 1,
                            "name": "lastName",
                            "type": "Field",
                          },
                        },
                        "reset": [Function],
                        "sectionPrefix": undefined,
                        "setSubmitFailed": [Function],
                        "setSubmitSucceeded": [Function],
                        "shouldAsyncValidate": [Function],
                        "shouldValidate": [Function],
                        "startAsyncValidation": [Function],
                        "startSubmit": [Function],
                        "stopAsyncValidation": [Function],
                        "stopSubmit": [Function],
                        "submit": [Function],
                        "submitFailed": false,
                        "submitSucceeded": false,
                        "submitting": false,
                        "syncErrors": Object {},
                        "syncWarnings": Object {},
                        "theForm": Object {
                          "initial": Object {
                            "firstName": "Ned",
                            "lastName": "Stark",
                          },
                          "registeredFields": Object {
                            "firstName": Object {
                              "count": 1,
                              "name": "firstName",
                              "type": "Field",
                            },
                            "lastName": Object {
                              "count": 1,
                              "name": "lastName",
                              "type": "Field",
                            },
                          },
                          "values": Object {
                            "firstName": "Ned",
                            "lastName": "Stark",
                          },
                        },
                        "touch": [Function],
                        "touchOnBlur": true,
                        "touchOnChange": false,
                        "triggerSubmit": undefined,
                        "unregister": [Function],
                        "unregisterField": [Function],
                        "untouch": [Function],
                        "updateSyncErrors": [Function],
                        "updateSyncWarnings": [Function],
                        "valid": true,
                        "validExceptSubmit": true,
                        "values": Object {
                          "firstName": "Ned",
                          "lastName": "Stark",
                        },
                        "warning": undefined,
                      }
                    }
                    asyncValidating={false}
                    component={[Function]}
                    dirty={false}
                    dispatch={[Function]}
                    id="firstName"
                    initial="Ned"
                    label="First Name"
                    name="firstName"
                    normalize={[Function]}
                    pristine={true}
                    value="Ned"
                  >
                    <TextFieldWrapper
                      id="firstName"
                      input={
                        Object {
                          "name": "firstName",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onDragStart": [Function],
                          "onDrop": [Function],
                          "onFocus": [Function],
                          "value": "Ned",
                        }
                      }
                      label="First Name"
                      meta={
                        Object {
                          "active": false,
                          "asyncValidating": false,
                          "autofilled": false,
                          "dirty": false,
                          "dispatch": [Function],
                          "error": undefined,
                          "form": "profileName",
                          "initial": "Ned",
                          "invalid": false,
                          "pristine": true,
                          "submitFailed": false,
                          "submitting": false,
                          "touched": false,
                          "valid": true,
                          "visited": false,
                          "warning": undefined,
                        }
                      }
                    >
                      <TextField
                        id="firstName"
                        label="First Name"
                        name="firstName"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onDragStart={[Function]}
                        onDrop={[Function]}
                        onFocus={[Function]}
                        type="text"
                        value="Ned"
                      >
                        <fieldset
                          className="Matchbox-TextField"
                        >
                          <Label
                            id="firstName"
                            label="First Name"
                          >
                            <label
                              className="Matchbox-Label"
                              htmlFor="firstName"
                              id="firstNameLabel"
                            >
                              First Name
                            </label>
                          </Label>
                          <Connect>
                            <div
                              className="Matchbox-Connect"
                            >
                              <div
                                className="Matchbox-Connect__Primary"
                              >
                                <input
                                  className="Matchbox-TextField__Input"
                                  id="firstName"
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  style={
                                    Object {
                                      "paddingLeft": undefined,
                                      "paddingRight": undefined,
                                    }
                                  }
                                  type="text"
                                  value="Ned"
                                />
                              </div>
                            </div>
                          </Connect>
                        </fieldset>
                      </TextField>
                    </TextFieldWrapper>
                  </ConnectedField>
                </Connect(ConnectedField)>
              </Field>
              <Field
                component={[Function]}
                id="lirstName"
                label="Last Name"
                name="lastName"
              >
                <Connect(ConnectedField)
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": true,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "profileName",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": Object {
                        "firstName": "Ned",
                        "lastName": "Stark",
                      },
                      "initialize": [Function],
                      "initialized": true,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "firstName": Object {
                          "count": 1,
                          "name": "firstName",
                          "type": "Field",
                        },
                        "lastName": Object {
                          "count": 1,
                          "name": "lastName",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "theForm": Object {
                        "initial": Object {
                          "firstName": "Ned",
                          "lastName": "Stark",
                        },
                        "registeredFields": Object {
                          "firstName": Object {
                            "count": 1,
                            "name": "firstName",
                            "type": "Field",
                          },
                          "lastName": Object {
                            "count": 1,
                            "name": "lastName",
                            "type": "Field",
                          },
                        },
                        "values": Object {
                          "firstName": "Ned",
                          "lastName": "Stark",
                        },
                      },
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {
                        "firstName": "Ned",
                        "lastName": "Stark",
                      },
                      "warning": undefined,
                    }
                  }
                  component={[Function]}
                  id="lirstName"
                  label="Last Name"
                  name="lastName"
                  normalize={[Function]}
                >
                  <ConnectedField
                    _reduxForm={
                      Object {
                        "anyTouched": false,
                        "array": Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        },
                        "arrayInsert": [Function],
                        "arrayMove": [Function],
                        "arrayPop": [Function],
                        "arrayPush": [Function],
                        "arrayRemove": [Function],
                        "arrayRemoveAll": [Function],
                        "arrayShift": [Function],
                        "arraySplice": [Function],
                        "arraySwap": [Function],
                        "arrayUnshift": [Function],
                        "asyncErrors": undefined,
                        "asyncValidate": [Function],
                        "asyncValidating": false,
                        "autofill": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearAsyncError": [Function],
                        "clearSubmit": [Function],
                        "clearSubmitErrors": [Function],
                        "destroy": [Function],
                        "destroyOnUnmount": true,
                        "dirty": false,
                        "dispatch": [Function],
                        "enableReinitialize": true,
                        "error": undefined,
                        "focus": [Function],
                        "forceUnregisterOnUnmount": false,
                        "form": "profileName",
                        "getFormState": [Function],
                        "getValues": [Function],
                        "initialValues": Object {
                          "firstName": "Ned",
                          "lastName": "Stark",
                        },
                        "initialize": [Function],
                        "initialized": true,
                        "invalid": false,
                        "keepDirtyOnReinitialize": false,
                        "persistentSubmitErrors": false,
                        "pristine": true,
                        "pure": true,
                        "register": [Function],
                        "registerField": [Function],
                        "registerInnerOnSubmit": [Function],
                        "registeredFields": Object {
                          "firstName": Object {
                            "count": 1,
                            "name": "firstName",
                            "type": "Field",
                          },
                          "lastName": Object {
                            "count": 1,
                            "name": "lastName",
                            "type": "Field",
                          },
                        },
                        "reset": [Function],
                        "sectionPrefix": undefined,
                        "setSubmitFailed": [Function],
                        "setSubmitSucceeded": [Function],
                        "shouldAsyncValidate": [Function],
                        "shouldValidate": [Function],
                        "startAsyncValidation": [Function],
                        "startSubmit": [Function],
                        "stopAsyncValidation": [Function],
                        "stopSubmit": [Function],
                        "submit": [Function],
                        "submitFailed": false,
                        "submitSucceeded": false,
                        "submitting": false,
                        "syncErrors": Object {},
                        "syncWarnings": Object {},
                        "theForm": Object {
                          "initial": Object {
                            "firstName": "Ned",
                            "lastName": "Stark",
                          },
                          "registeredFields": Object {
                            "firstName": Object {
                              "count": 1,
                              "name": "firstName",
                              "type": "Field",
                            },
                            "lastName": Object {
                              "count": 1,
                              "name": "lastName",
                              "type": "Field",
                            },
                          },
                          "values": Object {
                            "firstName": "Ned",
                            "lastName": "Stark",
                          },
                        },
                        "touch": [Function],
                        "touchOnBlur": true,
                        "touchOnChange": false,
                        "triggerSubmit": undefined,
                        "unregister": [Function],
                        "unregisterField": [Function],
                        "untouch": [Function],
                        "updateSyncErrors": [Function],
                        "updateSyncWarnings": [Function],
                        "valid": true,
                        "validExceptSubmit": true,
                        "values": Object {
                          "firstName": "Ned",
                          "lastName": "Stark",
                        },
                        "warning": undefined,
                      }
                    }
                    asyncValidating={false}
                    component={[Function]}
                    dirty={false}
                    dispatch={[Function]}
                    id="lirstName"
                    initial="Stark"
                    label="Last Name"
                    name="lastName"
                    normalize={[Function]}
                    pristine={true}
                    value="Stark"
                  >
                    <TextFieldWrapper
                      id="lirstName"
                      input={
                        Object {
                          "name": "lastName",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onDragStart": [Function],
                          "onDrop": [Function],
                          "onFocus": [Function],
                          "value": "Stark",
                        }
                      }
                      label="Last Name"
                      meta={
                        Object {
                          "active": false,
                          "asyncValidating": false,
                          "autofilled": false,
                          "dirty": false,
                          "dispatch": [Function],
                          "error": undefined,
                          "form": "profileName",
                          "initial": "Stark",
                          "invalid": false,
                          "pristine": true,
                          "submitFailed": false,
                          "submitting": false,
                          "touched": false,
                          "valid": true,
                          "visited": false,
                          "warning": undefined,
                        }
                      }
                    >
                      <TextField
                        id="lirstName"
                        label="Last Name"
                        name="lastName"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onDragStart={[Function]}
                        onDrop={[Function]}
                        onFocus={[Function]}
                        type="text"
                        value="Stark"
                      >
                        <fieldset
                          className="Matchbox-TextField"
                        >
                          <Label
                            id="lirstName"
                            label="Last Name"
                          >
                            <label
                              className="Matchbox-Label"
                              htmlFor="lirstName"
                              id="lirstNameLabel"
                            >
                              Last Name
                            </label>
                          </Label>
                          <Connect>
                            <div
                              className="Matchbox-Connect"
                            >
                              <div
                                className="Matchbox-Connect__Primary"
                              >
                                <input
                                  className="Matchbox-TextField__Input"
                                  id="lirstName"
                                  name="lastName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  style={
                                    Object {
                                      "paddingLeft": undefined,
                                      "paddingRight": undefined,
                                    }
                                  }
                                  type="text"
                                  value="Stark"
                                />
                              </div>
                            </div>
                          </Connect>
                        </fieldset>
                      </TextField>
                    </TextFieldWrapper>
                  </ConnectedField>
                </Connect(ConnectedField)>
              </Field>
              <Button
                size="default"
                submit={true}
              >
                <button
                  className="Matchbox-Button"
                  onMouseUp={[Function]}
                  type="submit"
                >
                  Update Profile
                </button>
              </Button>
            </form>
          </NameForm>
        </Form(NameForm)>
      </Connect(Form(NameForm))>
    </ReduxForm>
  </Connect(ReduxForm)>
</Provider>
`;
