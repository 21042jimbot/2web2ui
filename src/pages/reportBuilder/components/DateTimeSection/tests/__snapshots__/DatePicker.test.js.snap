// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: DatePicker handleFormDates should use a date field format if provided 1`] = `
<TextField
  disabled={false}
  id="date-field-date-picker"
  onBlur={[MockFunction]}
  onClick={[MockFunction]}
  readOnly={true}
  value="YYYY-MM h – YYYY-MM h"
/>
`;

exports[`Component: DatePicker should not render range select if showPresets is false 1`] = `
<TextField
  disabled={false}
  id="date-field-date-picker"
  onBlur={[MockFunction]}
  onClick={[MockFunction]}
  readOnly={true}
  value="MMM Do YYYY h:mma – MMM Do YYYY h:mma"
/>
`;

exports[`Component: DatePicker should render ok by default 1`] = `
<Popover
  className="Popover"
  id="popover-date-picker"
  onClose={[Function]}
  open={false}
  trigger={
    <TextField
      disabled={false}
      id="date-field-date-picker"
      onBlur={[Function]}
      onClick={[Function]}
      readOnly={true}
      value="MMM Do YYYY h:mma – MMM Do YYYY h:mma"
    />
  }
  wrapper="div"
>
  <Box
    display="flex"
  >
    <Box
      borderColor="gray.400"
      borderRight="1px solid"
      className="ActionList"
    >
      <ActionList
        actions={
          Array [
            Object {
              "content": undefined,
              "highlighted": false,
              "onClick": [Function],
            },
            Object {
              "content": undefined,
              "highlighted": false,
              "onClick": [Function],
            },
            Object {
              "content": undefined,
              "highlighted": false,
              "onClick": [Function],
            },
          ]
        }
      />
    </Box>
    <Box
      className="DateSelectorWrapper"
      padding="400"
    >
      <DatePicker
        className="DateSelector"
        disabledDays={
          Object {
            "after": 2017-01-15T12:00:00.000Z,
          }
        }
        enableOutsideDays={false}
        fixedWeeks={true}
        initialMonth={2017-01-15T12:00:00.000Z}
        numberOfMonths={2}
        onDayClick={[Function]}
        onDayFocus={[Function]}
        onDayKeyDown={[Function]}
        onDayMouseEnter={[Function]}
        onKeyDown={[Function]}
        selectedDays={
          Object {
            "from": 2017-01-15T11:00:00.000Z,
            "to": 2017-01-15T12:00:00.000Z,
          }
        }
        toMonth={2017-01-15T12:00:00.000Z}
      />
      <ManualEntryForm
        from={2017-01-15T11:00:00.000Z}
        onEnter={[Function]}
        preventFuture={true}
        roundToPrecision={true}
        selectDates={[Function]}
        to={2017-01-15T12:00:00.000Z}
      />
    </Box>
  </Box>
  <Box
    borderColor="gray.400"
    borderTop="1px solid"
    marginTop="500"
    padding="400"
  >
    <ButtonWrapper>
      <Button
        data-id="date-picker-custom-apply"
        onClick={[Function]}
        variant="primary"
      >
        Apply
      </Button>
      <Button
        onClick={[Function]}
        variant="secondary"
      >
        Cancel
      </Button>
    </ButtonWrapper>
  </Box>
  <WindowEvent
    event="keydown"
    handler={[Function]}
  />
</Popover>
`;
