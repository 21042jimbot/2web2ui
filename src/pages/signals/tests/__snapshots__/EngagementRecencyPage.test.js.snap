// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signals Engagement Recency Page bar chart props gets x axis props 1`] = `
Object {
  "tickFormatter": [Function],
  "ticks": Array [
    1,
    2,
  ],
}
`;

exports[`Signals Engagement Recency Page bar chart props renders tooltip content 1`] = `
<Fragment>
  <TooltipMetric
    color="#88E2E7"
    description="Never engaged, first email in last 7 days"
    key="new"
    label="New"
    value="50%"
  />
  <TooltipMetric
    color="#50CFDA"
    description="365+ days since last engagement"
    key="uneng"
    label="Never Engaged"
    value="10%"
  />
  <TooltipMetric
    color="#29B9C7"
    description="90-365 days since last engagement"
    key="365d"
    label="Not Recently Engaged"
    value="20%"
  />
  <TooltipMetric
    color="#219EA8"
    description="14-90 days since last engagement"
    key="90d"
    label="Semi Recently Engaged"
    value="30%"
  />
  <TooltipMetric
    color="#1A838B"
    description="0-14 days since last engagement"
    key="14d"
    label="Recently Engaged"
    value="40%"
  />
</Fragment>
`;

exports[`Signals Engagement Recency Page renders correctly 1`] = `
<SignalsPage
  breadcrumbAction={
    Object {
      "component": [Function],
      "content": "Back to Engagement Recency Overview",
      "to": "/signals/engagement",
    }
  }
  facet="sending-domain"
  facetId="test.com"
  primaryArea={
    <Connect(DateFilter)
      left={true}
    />
  }
  title={
    <React.Fragment>
      Engagement Recency
      <InfoTooltip
        content="
  The share over time of your email that has been sent to recipients who most recently
  opened messages or clicked links during several defined time periods.
"
      />
    </React.Fragment>
  }
>
  <Grid>
    <Grid.Column
      md={7}
      sm={12}
    >
      <withRouter(Tabs)
        facet="sending-domain"
        facetId="test.com"
      />
      <Panel
        sectioned={true}
      >
        <div
          className="LiftTooltip"
        >
          <BarChart
            activeFill="#22838A"
            fill="#B3ECEF"
            gap={0.25}
            height={250}
            margin={
              Object {
                "bottom": 5,
                "left": 18,
                "right": 0,
                "top": 12,
              }
            }
            onClick={[MockFunction]}
            selected="2017-01-02"
            timeSeries={
              Array [
                Object {
                  "c_total": 1,
                  "date": "2017-01-01",
                },
                Object {
                  "c_total": 10,
                  "date": "2017-01-02",
                },
              ]
            }
            tooltipContent={[Function]}
            tooltipWidth="250px"
            width="99%"
            xAxisProps={
              Object {
                "tickFormatter": [Function],
                "ticks": Array [
                  1,
                  2,
                ],
              }
            }
            xAxisRefLines={Array []}
            xKey="date"
            yAxisProps={
              Object {
                "domain": Array [
                  0,
                  1,
                ],
                "tickFormatter": [Function],
                "ticks": Array [
                  0,
                  0.25,
                  0.5,
                  0.75,
                  1,
                ],
              }
            }
            yAxisRefLines={Array []}
            yKey="value"
            yKeys={
              Array [
                Object {
                  "description": "0-14 days since last engagement",
                  "fill": "#1A838B",
                  "key": "c_14d",
                  "label": "Recently Engaged",
                  "stroke": "#1A838B",
                },
                Object {
                  "description": "14-90 days since last engagement",
                  "fill": "#219EA8",
                  "key": "c_90d",
                  "label": "Semi Recently Engaged",
                  "stroke": "#219EA8",
                },
                Object {
                  "description": "90-365 days since last engagement",
                  "fill": "#29B9C7",
                  "key": "c_365d",
                  "label": "Not Recently Engaged",
                  "stroke": "#29B9C7",
                },
                Object {
                  "description": "365+ days since last engagement",
                  "fill": "#50CFDA",
                  "key": "c_uneng",
                  "label": "Never Engaged",
                  "stroke": "#50CFDA",
                },
                Object {
                  "description": "Never engaged, first email in last 7 days",
                  "fill": "#88E2E7",
                  "key": "c_new",
                  "label": "New",
                  "stroke": "#88E2E7",
                },
              ]
            }
            yRange={
              Array [
                "auto",
                "auto",
              ]
            }
          />
          <Legend
            items={
              Array [
                Object {
                  "description": "Never engaged, first email in last 7 days",
                  "fill": "#88E2E7",
                  "label": "New",
                  "stroke": "#88E2E7",
                },
                Object {
                  "description": "365+ days since last engagement",
                  "fill": "#50CFDA",
                  "label": "Never Engaged",
                  "stroke": "#50CFDA",
                },
                Object {
                  "description": "90-365 days since last engagement",
                  "fill": "#29B9C7",
                  "label": "Not Recently Engaged",
                  "stroke": "#29B9C7",
                },
                Object {
                  "description": "14-90 days since last engagement",
                  "fill": "#219EA8",
                  "label": "Semi Recently Engaged",
                  "stroke": "#219EA8",
                },
                Object {
                  "description": "0-14 days since last engagement",
                  "fill": "#1A838B",
                  "label": "Recently Engaged",
                  "stroke": "#1A838B",
                },
              ]
            }
            tooltipContent={[Function]}
          />
        </div>
      </Panel>
    </Grid.Column>
    <Grid.Column
      md={5}
      mdOffset={0}
      sm={12}
    >
      <div
        className="OffsetCol"
      >
        <EngagementRecencyActions
          cohorts={
            Object {
              "c_total": 10,
              "date": "2017-01-02",
            }
          }
          date="2017-01-02"
        />
      </div>
    </Grid.Column>
  </Grid>
  <Divider />
  <Grid>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithDetails(SpamTrapsPreview))) />
    </Grid.Column>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithDetails(HealthScorePreview))) />
    </Grid.Column>
  </Grid>
</SignalsPage>
`;

exports[`Signals Engagement Recency Page renders empty correctly 1`] = `
<Panel
  sectioned={true}
>
  <Callout
    title="No Data Available"
  >
    Insufficient data to populate this chart
  </Callout>
</Panel>
`;

exports[`Signals Engagement Recency Page renders error correctly 1`] = `
<SignalsPage
  breadcrumbAction={
    Object {
      "component": [Function],
      "content": "Back to Engagement Recency Overview",
      "to": "/signals/engagement",
    }
  }
  facet="sending-domain"
  facetId="test.com"
  primaryArea={
    <Connect(DateFilter)
      left={true}
    />
  }
  title={
    <React.Fragment>
      Engagement Recency
      <InfoTooltip
        content="
  The share over time of your email that has been sent to recipients who most recently
  opened messages or clicked links during several defined time periods.
"
      />
    </React.Fragment>
  }
>
  <Grid>
    <Grid.Column
      md={7}
      sm={12}
    >
      <withRouter(Tabs)
        facet="sending-domain"
        facetId="test.com"
      />
      <Panel
        sectioned={true}
      >
        <Callout
          title="Unable to Load Data"
        >
          error message
        </Callout>
      </Panel>
    </Grid.Column>
    <Grid.Column
      md={5}
      mdOffset={0}
      sm={12}
    >
      <div
        className="OffsetCol"
      />
    </Grid.Column>
  </Grid>
  <Divider />
  <Grid>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithDetails(SpamTrapsPreview))) />
    </Grid.Column>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithDetails(HealthScorePreview))) />
    </Grid.Column>
  </Grid>
</SignalsPage>
`;

exports[`Signals Engagement Recency Page renders loading correctly 1`] = `
<Panel
  sectioned={true}
>
  <div
    style={
      Object {
        "height": "220px",
        "position": "relative",
      }
    }
  >
    <Loading />
  </div>
</Panel>
`;
