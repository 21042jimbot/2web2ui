// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signals Spam Trap Page bar chart props gets x axis props 1`] = `
Object {
  "tickFormatter": [Function],
  "ticks": Array [],
}
`;

exports[`Signals Spam Trap Page bar chart props renders tooltip content 1`] = `
<Fragment>
  <TooltipMetric
    label="Spam Trap Rate"
    value="10%"
  />
  <TooltipMetric
    color="#50CFDA"
    key="trap_hits_parked"
    label="Parked"
    value="2.5%"
  />
  <TooltipMetric
    color="#29B9C7"
    key="trap_hits_recycled"
    label="Recycled"
    value="2.5%"
  />
  <TooltipMetric
    color="#1A838B"
    key="trap_hits_typo"
    label="Typo"
    value="5%"
  />
  <TooltipMetric
    label="Injections"
    value="1,240"
  />
</Fragment>
`;

exports[`Signals Spam Trap Page renders correctly 1`] = `
<SignalsPage
  breadcrumbAction={
    Object {
      "component": [Function],
      "content": "Back to Spam Trap Overview",
      "to": "/signals/spam-traps",
    }
  }
  facet="sending-domain"
  facetId="test.com"
  primaryArea={
    <Connect(DateFilter)
      left={true}
    />
  }
  title="Spam Traps"
>
  <Grid>
    <Grid.Column
      md={7}
      sm={12}
    >
      <Panel
        sectioned={true}
      >
        <ChartHeader
          primaryArea={
            <Calculation
              initialSelected="relative"
              onChange={[Function]}
            />
          }
          title="Spam Trap Monitoring"
          tooltipContent="
  The share over time of your total email that has been sent to known spam traps. An
  excessive rate of spam trap hits is an indicator of poor list procurement and hygiene practices.
"
        />
        <div
          className="LiftTooltip"
        >
          <BarChart
            activeFill="#22838A"
            fill="#B3ECEF"
            gap={0.25}
            height={250}
            margin={
              Object {
                "bottom": 5,
                "left": 18,
                "right": 0,
                "top": 12,
              }
            }
            onClick={[MockFunction]}
            selected="2017-01-01"
            timeSeries={
              Array [
                Object {
                  "date": "2017-01-01",
                  "injections": 1240,
                  "relative_trap_hits": 0.1,
                  "relative_trap_hits_parked": 0.025,
                  "relative_trap_hits_recycled": 0.025,
                  "relative_trap_hits_typo": 0.05,
                  "trap_hits": 124,
                  "trap_hits_parked": 31,
                  "trap_hits_recycled": 31,
                  "trap_hits_typo": 62,
                },
                Object {
                  "date": "2017-01-02",
                  "injections": 424,
                  "relative_trap_hits": 0.5,
                  "relative_trap_hits_parked": 0.125,
                  "relative_trap_hits_recycled": 0.125,
                  "relative_trap_hits_typo": 0.25,
                  "trap_hits": 212,
                  "trap_hits_parked": 53,
                  "trap_hits_recycled": 53,
                  "trap_hits_typo": 106,
                },
              ]
            }
            tooltipContent={[Function]}
            width="99%"
            xAxisProps={
              Object {
                "tickFormatter": [Function],
                "ticks": Array [],
              }
            }
            xAxisRefLines={Array []}
            xKey="date"
            yAxisProps={
              Object {
                "domain": Array [
                  "auto",
                  "auto",
                ],
                "tickFormatter": [Function],
              }
            }
            yAxisRefLines={Array []}
            yKey="value"
            yKeys={
              Array [
                Object {
                  "fill": "#1A838B",
                  "key": "relative_trap_hits_typo",
                },
                Object {
                  "fill": "#29B9C7",
                  "key": "relative_trap_hits_recycled",
                },
                Object {
                  "fill": "#50CFDA",
                  "key": "relative_trap_hits_parked",
                },
              ]
            }
            yRange={
              Array [
                "auto",
                "auto",
              ]
            }
          />
          <Legend
            items={
              Array [
                Object {
                  "description": "
      This is an email address from a domain hosted by a parked domain provider. These addresses
      can point to list quality issues but do not affect your reputation.
    ",
                  "fill": "#50CFDA",
                  "key": "trap_hits_parked",
                  "label": "Parked",
                },
                Object {
                  "description": "
      An email address that once was a real address, but now is a spam trap. These addresses signal
      that you should clean out old unengaged recipients.
    ",
                  "fill": "#29B9C7",
                  "key": "trap_hits_recycled",
                  "label": "Recycled",
                },
                Object {
                  "description": "
      This is an email address from a domain that looks like a real mailbox provider, like
      gmal.com. These addresses signal that you should improve your list acquisition practices.
    ",
                  "fill": "#1A838B",
                  "key": "trap_hits_typo",
                  "label": "Typo",
                },
              ]
            }
            tooltipContent={[Function]}
          />
        </div>
      </Panel>
    </Grid.Column>
    <Grid.Column
      md={5}
      mdOffset={0}
      sm={12}
    >
      <div
        className="OffsetCol"
      >
        <SpamTrapActions
          date="2017-01-01"
          percent={0.1}
        />
      </div>
    </Grid.Column>
  </Grid>
  <Divider />
  <Grid>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithDetails(EngagementRecencyPreview))) />
    </Grid.Column>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithDetails(HealthScorePreview))) />
    </Grid.Column>
  </Grid>
</SignalsPage>
`;

exports[`Signals Spam Trap Page renders empty correctly 1`] = `
<Panel
  sectioned={true}
>
  <ChartHeader
    primaryArea={
      <Calculation
        initialSelected="relative"
        onChange={[Function]}
      />
    }
    title="Spam Trap Monitoring"
    tooltipContent="
  The share over time of your total email that has been sent to known spam traps. An
  excessive rate of spam trap hits is an indicator of poor list procurement and hygiene practices.
"
  />
  <Callout
    title="No Data Available"
  >
    Insufficient data to populate this chart
  </Callout>
</Panel>
`;

exports[`Signals Spam Trap Page renders error correctly 1`] = `
<SignalsPage
  breadcrumbAction={
    Object {
      "component": [Function],
      "content": "Back to Spam Trap Overview",
      "to": "/signals/spam-traps",
    }
  }
  facet="sending-domain"
  facetId="test.com"
  primaryArea={
    <Connect(DateFilter)
      left={true}
    />
  }
  title="Spam Traps"
>
  <Grid>
    <Grid.Column
      md={7}
      sm={12}
    >
      <Panel
        sectioned={true}
      >
        <ChartHeader
          primaryArea={
            <Calculation
              initialSelected="relative"
              onChange={[Function]}
            />
          }
          title="Spam Trap Monitoring"
          tooltipContent="
  The share over time of your total email that has been sent to known spam traps. An
  excessive rate of spam trap hits is an indicator of poor list procurement and hygiene practices.
"
        />
        <Callout
          title="Unable to Load Data"
        >
          error message
        </Callout>
      </Panel>
    </Grid.Column>
    <Grid.Column
      md={5}
      mdOffset={0}
      sm={12}
    >
      <div
        className="OffsetCol"
      />
    </Grid.Column>
  </Grid>
  <Divider />
  <Grid>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithDetails(EngagementRecencyPreview))) />
    </Grid.Column>
    <Grid.Column
      sm={6}
      xs={12}
    >
      <withRouter(Connect(WithDetails(HealthScorePreview))) />
    </Grid.Column>
  </Grid>
</SignalsPage>
`;

exports[`Signals Spam Trap Page renders loading correctly 1`] = `
<Panel
  sectioned={true}
>
  <ChartHeader
    primaryArea={
      <Calculation
        initialSelected="relative"
        onChange={[Function]}
      />
    }
    title="Spam Trap Monitoring"
    tooltipContent="
  The share over time of your total email that has been sent to known spam traps. An
  excessive rate of spam trap hits is an indicator of poor list procurement and hygiene practices.
"
  />
  <div
    style={
      Object {
        "height": "220px",
        "position": "relative",
      }
    }
  >
    <Loading />
  </div>
</Panel>
`;
